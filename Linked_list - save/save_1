#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>
 
typedef struct Node {
    int data;
    struct Node *next;
} Node;
 
typedef struct {
    Node *first;
    Node *last;
} LinkedList;
 
Node *prev_node;
 
LinkedList* create_linked_list() {
    LinkedList *list = (LinkedList*)malloc(sizeof(LinkedList));
    list->first = NULL;
    list->last = NULL;
 
    return list;
}
 
Node* create_node(int value) {
    Node *node = (Node*)malloc(sizeof(Node));
    node->data = value;
    node->next = NULL;
 
    return node;
}
 
void add_first_node(LinkedList *list, Node *node) {
    list->first = node;
    list->last = node;
}
 
void insert_to_first(LinkedList *list, Node *node) {
    node->next = list->first;
    list->first = node;
}
 
void insert_to_last(LinkedList *list, Node *node) {
    list->last->next = node;
    list->last = node;
}
 
Node* search_node(LinkedList *list, int key) {
    prev_node = NULL;
    Node *node = list->first;
    while(node != NULL) {
        if(node->data == key){
            return node;
        }
        prev_node = node;
        node = node->next;
    }
    return NULL;
}
 
void insert_after(LinkedList *list, Node *node, int key) {
    Node *found = search_node(list, key);
    if(found != NULL) {
        node->next = found->next;
        found->next = node;
    } else {
        printf("Not found node with key = %d\n", key);
    }
}
 
void delete_first_node(LinkedList *list) {
    Node *node = list->first;
    list->first = node->next;
    if(list->first == NULL) {
        list->last = NULL;
    }
    free(node);
}
 
void delete_node(LinkedList *list, int key) {
    Node *found = search_node(list, key);
    if(found != NULL) {
        if(list->first == found) {
            list->first = found->next;
            if(list->first == NULL) {
                list->last = NULL;
            }
        } else if(list->last == found) {
            prev_node->next = NULL;
            list->last = prev_node;
        } else {
            prev_node->next = found->next;
        }
        free(found);
    } else {
        printf("Not found node with key = %d\n", key);
    }
}
 
void delete_list(LinkedList *list) {
    Node *node;
    while(list->first != NULL) {
        node = list->first;
        list->first = node->next;
        free(node);
    }
    list->last = NULL;
}
 
void print_list(LinkedList *list) {
    Node *node = list->first;
    while(node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}
 
int main() {
    //freopen("D:\\C60\\input.txt", "r", stdin);
 
    LinkedList *list = create_linked_list();
 
    Node *node2 = create_node(2);
    add_first_node(list, node2);
    print_list(list);
 
    Node *node1 = create_node(1);
    insert_to_first(list, node1);
    print_list(list);
 
    Node *node4 = create_node(4);
    insert_to_last(list, node4);
    print_list(list);
 
    Node *node3 = create_node(3);
    insert_after(list, node3, 2);
    print_list(list);
 
    delete_list(list);
    print_list(list);
 
    return 0;
}
